name: Publish Datahub Client

on:
  release:
    types: [published, edited]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:

  check-secret:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    outputs:
      publish-enabled: ${{ steps.publish-enabled.outputs.publish }}
    steps:
      - id: publish-enabled
        env:
          SIGNING_KEY: ${{ secrets.SIGNING_KEY }}
        run: |
          echo "Enable publish: ${{ env.SIGNING_KEY != '' }}"
          echo "::set-output name=publish::${{ env.SIGNING_KEY != '' }}"

  publish:
    runs-on: ubuntu-latest
    needs: [check-secret]
    if: ${{ needs.publish-enabled.outputs.publish == 'true' }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: checkout upstream repo
        run: |
          git remote add upstream https://github.com/acryldata/json-schema-avro.git
          git fetch upstream --tags --force
      - name: publish json-schema-avro
        env:
          RELEASE_USERNAME: ${{ secrets.RELEASE_USERNAME }}
          RELEASE_PASSWORD: ${{ secrets.RELEASE_PASSWORD }}
          SIGNING_PASSWORD: ${{ secrets.SIGNING_PASSWORD }}
          SIGNING_KEY: ${{ secrets.SIGNING_KEY }}
          NEXUS_USERNAME: ${{ secrets.NEXUS_USERNAME }}
          NEXUS_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}
        run: |
          echo signingKey=$SIGNING_KEY >> gradle.properties
          echo sonatypeUsername=$NEXUS_USERNAME >> gradle.properties
          echo sonatypePassword=$NEXUS_PASSWORD >> gradle.properties
          echo releaseUsername=$RELEASE_USERNAME >> gradle.properties
          echo releasePassword=$RELEASE_PASSWORD >> gradle.properties
          ./dorelease.sh