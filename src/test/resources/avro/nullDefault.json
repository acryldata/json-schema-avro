[
  {
    "avroSchema": {
      "type": "record",
      "name": "GlobalViewsSettings",
      "namespace": "com.linkedin.settings.global",
      "doc": "Settings for DataHub Views feature.",
      "fields": [
        {
          "name": "defaultView",
          "type": [
            "null",
            "string"
          ],
          "doc": "The default View for the instance, or organization.",
          "default": null,
          "java": {
            "class": "com.linkedin.common.urn.Urn"
          }
        }
      ]
    },
    "jsonSchema": {
      "definitions": {
        "GlobalViewsSettings": {
          "description": "Settings for DataHub Views feature.",
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "defaultView": {
              "default": null,
              "description": "The default View for the instance, or organization.",
              "type": "string"
            }
          }
        }
      },
      "$ref": "#/definitions/GlobalViewsSettings"
    }
  },
  {
    "avroSchema": {
      "type" : "record",
      "name" : "EditableDataJobProperties",
      "namespace" : "com.linkedin.datajob",
      "doc" : "Stores editable changes made to properties. This separates changes made from\ningestion pipelines and edits in the UI to avoid accidental overwrites of user-provided data by ingestion pipelines",
      "fields" : [ {
        "name" : "created",
        "type" : {
          "type" : "record",
          "name" : "AuditStamp",
          "namespace" : "com.linkedin.common",
          "doc" : "Data captured on a resource/association/sub-resource level giving insight into when that resource/association/sub-resource moved into a particular lifecycle stage, and who acted to move it into that specific lifecycle stage.",
          "fields" : [ {
            "name" : "time",
            "type" : "long",
            "doc" : "When did the resource/association/sub-resource move into the specific lifecycle stage represented by this AuditEvent."
          }, {
            "name" : "actor",
            "type" : "string",
            "doc" : "The entity (e.g. a member URN) which will be credited for moving the resource/association/sub-resource into the specific lifecycle stage. It is also the one used to authorize the change.",
            "java" : {
              "class" : "com.linkedin.common.urn.Urn"
            }
          }, {
            "name" : "impersonator",
            "type" : [ "null", "string" ],
            "doc" : "The entity (e.g. a service URN) which performs the change on behalf of the Actor and must be authorized to act as the Actor.",
            "default" : null,
            "java" : {
              "class" : "com.linkedin.common.urn.Urn"
            }
          }, {
            "name" : "message",
            "type" : [ "null", "string" ],
            "doc" : "Additional context around how DataHub was informed of the particular change. For example: was the change created by an automated process, or manually.",
            "default" : null
          } ]
        },
        "doc" : "An AuditStamp corresponding to the creation of this resource/association/sub-resource. A value of 0 for time indicates missing data.",
        "default" : {
          "actor" : "urn:li:corpuser:unknown",
          "impersonator" : null,
          "time" : 0,
          "message" : null
        }
      }, {
        "name" : "lastModified",
        "type" : "com.linkedin.common.AuditStamp",
        "doc" : "An AuditStamp corresponding to the last modification of this resource/association/sub-resource. If no modification has happened since creation, lastModified should be the same as created. A value of 0 for time indicates missing data.",
        "default" : {
          "actor" : "urn:li:corpuser:unknown",
          "impersonator" : null,
          "time" : 0,
          "message" : null
        }
      }, {
        "name" : "deleted",
        "type" : [ "null", "com.linkedin.common.AuditStamp" ],
        "doc" : "An AuditStamp corresponding to the deletion of this resource/association/sub-resource. Logically, deleted MUST have a later timestamp than creation. It may or may not have the same time as lastModified depending upon the resource/association/sub-resource semantics.",
        "default" : null
      }, {
        "name" : "description",
        "type" : [ "null", "string" ],
        "doc" : "Edited documentation of the data job ",
        "default" : null,
        "Searchable" : {
          "fieldName" : "editedDescription",
          "fieldType" : "TEXT"
        }
      } ],
      "Aspect" : {
        "name" : "editableDataJobProperties"
      }
    },
    "jsonSchema": {
      "definitions" : {
        "EditableDataJobProperties" : {
          "description" : "Stores editable changes made to properties. This separates changes made from\ningestion pipelines and edits in the UI to avoid accidental overwrites of user-provided data by ingestion pipelines",
          "type" : "object",
          "additionalProperties" : false,
          "properties" : {
            "created" : {
              "default" : {
                "actor" : "urn:li:corpuser:unknown",
                "impersonator" : null,
                "time" : 0,
                "message" : null
              },
              "description" : "An AuditStamp corresponding to the creation of this resource/association/sub-resource. A value of 0 for time indicates missing data.",
              "$ref" : "#/definitions/AuditStamp"
            },
            "lastModified" : {
              "default" : {
                "actor" : "urn:li:corpuser:unknown",
                "impersonator" : null,
                "time" : 0,
                "message" : null
              },
              "description" : "An AuditStamp corresponding to the last modification of this resource/association/sub-resource. If no modification has happened since creation, lastModified should be the same as created. A value of 0 for time indicates missing data.",
              "$ref" : "#/definitions/AuditStamp"
            },
            "deleted" : {
              "default" : null,
              "description" : "An AuditStamp corresponding to the deletion of this resource/association/sub-resource. Logically, deleted MUST have a later timestamp than creation. It may or may not have the same time as lastModified depending upon the resource/association/sub-resource semantics.",
              "$ref" : "#/definitions/AuditStamp"
            },
            "description" : {
              "default" : null,
              "description" : "Edited documentation of the data job ",
              "type" : "string"
            }
          },
          "required" : [ "created", "lastModified" ]
        },
        "AuditStamp" : {
          "description" : "Data captured on a resource/association/sub-resource level giving insight into when that resource/association/sub-resource moved into a particular lifecycle stage, and who acted to move it into that specific lifecycle stage.",
          "type" : "object",
          "additionalProperties" : false,
          "properties" : {
            "time" : {
              "description" : "When did the resource/association/sub-resource move into the specific lifecycle stage represented by this AuditEvent.",
              "type" : "integer",
              "format" : "int64",
              "minimum" : -9223372036854775808,
              "maximum" : 9223372036854775807
            },
            "actor" : {
              "description" : "The entity (e.g. a member URN) which will be credited for moving the resource/association/sub-resource into the specific lifecycle stage. It is also the one used to authorize the change.",
              "type" : "string"
            },
            "impersonator" : {
              "default" : null,
              "description" : "The entity (e.g. a service URN) which performs the change on behalf of the Actor and must be authorized to act as the Actor.",
              "type" : "string"
            },
            "message" : {
              "default" : null,
              "description" : "Additional context around how DataHub was informed of the particular change. For example: was the change created by an automated process, or manually.",
              "type" : "string"
            }
          },
          "required" : [ "time", "actor" ]
        }
      },
      "$ref" : "#/definitions/EditableDataJobProperties"
    }
  }
]